{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":12,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":13,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1655693330312,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight 요청은 파싱 가능한 JSON 문자열을 돌려줘야 합니다","location":null,"status":"passed","title":"GET /flight 요청은 파싱 가능한 JSON 문자열을 돌려줘야 합니다"},{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight 요청의 응답은 배열의 형태여야 합니다","location":null,"status":"passed","title":"GET /flight 요청의 응답은 배열의 형태여야 합니다"},{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight 요청의 응답 객체는 `uuid, departure, destination, departure_times, arrival_times`를 포함해야 합니다","location":null,"status":"passed","title":"GET /flight 요청의 응답 객체는 `uuid, departure, destination, departure_times, arrival_times`를 포함해야 합니다"},{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight?departure_times=2021-12-03T12:00:00&arrival_times=2021-12-03T12:00:00를 입력하면 조건에 해당하는 객체를 리턴해야 합니다","location":null,"status":"passed","title":"GET /flight?departure_times=2021-12-03T12:00:00&arrival_times=2021-12-03T12:00:00를 입력하면 조건에 해당하는 객체를 리턴해야 합니다"},{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight?departure=CJU&destination=ICN 을 입력하면 조건에 해당하는 객체를 리턴해야 합니다","location":null,"status":"passed","title":"GET /flight?departure=CJU&destination=ICN 을 입력하면 조건에 해당하는 객체를 리턴해야 합니다"},{"ancestorTitles":["flight Router"],"failureMessages":[],"fullName":"flight Router GET /flight/:id 요청의 응답 객체는 `uuid, departure, destination, departure_times, arrival_times`를 포함해야 합니다","location":null,"status":"passed","title":"GET /flight/:id 요청의 응답 객체는 `uuid, departure, destination, departure_times, arrival_times`를 포함해야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router GET /book 요청의 응답은 배열의 형태여야 합니다","location":null,"status":"passed","title":"GET /book 요청의 응답은 배열의 형태여야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router GET /book 요청은 파싱 가능한 JSON 문자열을 돌려줘야 합니다","location":null,"status":"passed","title":"GET /book 요청은 파싱 가능한 JSON 문자열을 돌려줘야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router POST /book 요청시, flight_uuid, name, phone 데이터가 객체로 저장되어야 합니다","location":null,"status":"passed","title":"POST /book 요청시, flight_uuid, name, phone 데이터가 객체로 저장되어야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router GET /book?flight_uuid=af6fa55c-da65-47dd-af23-578fdba50bed 요청은 특정 항공편에 대한 모든 예약 객체를 반환해야 합니다","location":null,"status":"passed","title":"GET /book?flight_uuid=af6fa55c-da65-47dd-af23-578fdba50bed 요청은 특정 항공편에 대한 모든 예약 객체를 반환해야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router GET /book?phone=010-1234-5678 요청은 번호에 해당하는 에약 내역을 반환해야 합니다","location":null,"status":"passed","title":"GET /book?phone=010-1234-5678 요청은 번호에 해당하는 에약 내역을 반환해야 합니다"},{"ancestorTitles":["Book Router"],"failureMessages":[],"fullName":"Book Router DELETE /book?phone=010-1234-5678 요청을 하면 예약 목록에서 파라미터 phone에 해당하는 데이터가 삭제되어야 합니다","location":null,"status":"passed","title":"DELETE /book?phone=010-1234-5678 요청을 하면 예약 목록에서 파라미터 phone에 해당하는 데이터가 삭제되어야 합니다"},{"ancestorTitles":["Advanced Challenges"],"failureMessages":["SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at /Users/mun/Documents/bootcamp/fe-sprint-statesairline-server/statesairline/__test__/statesairline.test.js:258:29\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Advanced Challenges PUT /flight/:id 요청의 업데이트 된 객체를 반환해야 합니다","location":null,"status":"failed","title":"PUT /flight/:id 요청의 업데이트 된 객체를 반환해야 합니다"}],"endTime":1655693331000,"message":"  ● Advanced Challenges › PUT /flight/:id 요청의 업데이트 된 객체를 반환해야 합니다\n\n    SyntaxError: Unexpected end of JSON input\n        at JSON.parse (<anonymous>)\n\n      256 |       })\n      257 |       .then(res => {\n    > 258 |         const flight = JSON.parse(res.text);\n          |                             ^\n      259 |         expect(flight).toEqual({\n      260 |           uuid: 'af6fa55c-da65-47dd-af23-578fdba99bed',\n      261 |           departure: 'ICN',\n\n      at statesairline/__test__/statesairline.test.js:258:29\n","name":"/Users/mun/Documents/bootcamp/fe-sprint-statesairline-server/statesairline/__test__/statesairline.test.js","startTime":1655693330611,"status":"failed","summary":""}],"wasInterrupted":false}
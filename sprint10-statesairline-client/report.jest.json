{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":10,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":10,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1655283234508,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["💡 Part 1: 항공권 목록 필터링","🧩 Main 컴포넌트에서 항공편을 조회합니다"],"failureMessages":[],"fullName":"💡 Part 1: 항공권 목록 필터링 🧩 Main 컴포넌트에서 항공편을 조회합니다 Main 컴포넌트 내 `search` 함수는 검색 조건을 담고 있는 상태 객체 `condition`을 업데이트해야 합니다","location":null,"status":"passed","title":"Main 컴포넌트 내 `search` 함수는 검색 조건을 담고 있는 상태 객체 `condition`을 업데이트해야 합니다"},{"ancestorTitles":["💡 Part 1: 항공권 목록 필터링","🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다"],"failureMessages":[],"fullName":"💡 Part 1: 항공권 목록 필터링 🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다 검색 화면이 Search 컴포넌트로 분리되어야 합니다","location":null,"status":"passed","title":"검색 화면이 Search 컴포넌트로 분리되어야 합니다"},{"ancestorTitles":["💡 Part 1: 항공권 목록 필터링","🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다"],"failureMessages":[],"fullName":"💡 Part 1: 항공권 목록 필터링 🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다 Search 컴포넌트에는 상태 변경 함수 `search`가 `onSearch` props로 전달되어야 합니다","location":null,"status":"passed","title":"Search 컴포넌트에는 상태 변경 함수 `search`가 `onSearch` props로 전달되어야 합니다"},{"ancestorTitles":["💡 Part 1: 항공권 목록 필터링","🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다"],"failureMessages":[],"fullName":"💡 Part 1: 항공권 목록 필터링 🧩 Search 컴포넌트를 통해 상태 끌어올리기를 학습합니다 상태 변경 함수 `search`는 Search 컴포넌트의 `검색` 버튼 클릭 시 실행되어야 합니다","location":null,"status":"passed","title":"상태 변경 함수 `search`는 Search 컴포넌트의 `검색` 버튼 클릭 시 실행되어야 합니다"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 Side Effect는 useEffect에서 다뤄야 합니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 Side Effect는 useEffect에서 다뤄야 합니다 검색 조건이 바뀔 때마다, FlightDataApi의 getFlight를 검색 조건과 함께 요청해야 합니다","location":null,"status":"passed","title":"검색 조건이 바뀔 때마다, FlightDataApi의 getFlight를 검색 조건과 함께 요청해야 합니다"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 Side Effect는 useEffect에서 다뤄야 합니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 Side Effect는 useEffect에서 다뤄야 합니다 getFlight의 결과를 받아, flightList 상태를 업데이트해야 합니다","location":null,"status":"passed","title":"getFlight의 결과를 받아, flightList 상태를 업데이트해야 합니다"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 Side Effect는 useEffect에서 다뤄야 합니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 Side Effect는 useEffect에서 다뤄야 합니다 더이상, 컴포넌트 내 필터 함수 `filterByCondition`를 사용하지 않습니다","location":null,"status":"passed","title":"더이상, 컴포넌트 내 필터 함수 `filterByCondition`를 사용하지 않습니다"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 Side Effect는 useEffect에서 다뤄야 합니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 Side Effect는 useEffect에서 다뤄야 합니다 더이상, 하드코딩된 flightList JSON을 사용하지 않습니다 (초기값은 빈 배열로 둡니다)","location":null,"status":"passed","title":"더이상, 하드코딩된 flightList JSON을 사용하지 않습니다 (초기값은 빈 배열로 둡니다)"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 Side Effect는 useEffect에서 다뤄야 합니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 Side Effect는 useEffect에서 다뤄야 합니다 getFlight 요청이 다소 느리므로, 로딩 상태에 따라 LoadingIndicator 컴포넌트를 표시해야 합니다","location":null,"status":"passed","title":"getFlight 요청이 다소 느리므로, 로딩 상태에 따라 LoadingIndicator 컴포넌트를 표시해야 합니다"},{"ancestorTitles":["💡 Part 2: AJAX 요청","🧩 FlightDataApi에서 기존 구현 대신, REST API를 호출하도록 바꿉니다"],"failureMessages":[],"fullName":"💡 Part 2: AJAX 요청 🧩 FlightDataApi에서 기존 구현 대신, REST API를 호출하도록 바꿉니다 검색 조건과 함께 StatesAirline 서버에서 항공편 정보를 요청(fetch)합니다","location":null,"status":"passed","title":"검색 조건과 함께 StatesAirline 서버에서 항공편 정보를 요청(fetch)합니다"}],"endTime":1655283235337,"message":"","name":"/Users/mun/Documents/bootcamp/fe-sprint-statesairline-client/__tests__/index.test.js","startTime":1655283234738,"status":"passed","summary":""}],"wasInterrupted":false}